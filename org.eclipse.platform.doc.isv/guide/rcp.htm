<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><html lang="en">
<HEAD>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page." >

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
Building a Rich Client Platform application
</TITLE>

<link rel="stylesheet" type="text/css" HREF="../book.css">
</HEAD>
<BODY BGCOLOR="#ffffff">
<h1>Building a Rich Client Platform application</h1>
<P>
While the Eclipse platform is designed to serve as an open tools platform, it is architected so that its components could be 
used to build just about any client application.  The minimal set of plug-ins needed to build a rich client application is collectively
known as the <b>Rich Client Platform</b>.  
</P>
<p>
Applications that don't require a common resource model can be built using a subset of the platform.  These rich applications
are still based on a dynamic plug-in model, and the UI is built using the same toolkits and extension points.  The layout and
function of the workbench is under fine-grained control of the plug-in developer in this case.  Up until now, we've been adding
all of our visible functionality to the platform SDK workbench.  In a rich client application, we are responsible for defining the
application and its workbench.
</P>
<p>
When we say that the Rich Client Platform is the minimal set of plug-ins needed to build a platform application with
a UI, we mean that your application need only require two plug-ins, <b>org.eclipse.ui</b> and <b>org.eclipse.core runtime</b>.  
However, rich client applications are free to use any API deemed necessary 
for their feature set, and can require any plug-ins above the bare minimum.  The 
<a href="../reference/misc/overview-platform.html">Map of platform plug-ins</a> is a useful 
reference when determining what plug-ins should be required when using various platform
API.</P>
<p>The main thing that differentiates a rich client application from the platform workbench is that the application
is responsible for defining which class should be run as the main application.  We'll look at how this is done in
the context of an example.
</p>


</BODY></HTML>